resources:
  - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
    name: listener_app
    address:
      socket_address:
        address: 0.0.0.0
        port_value: %ENVOY_PUBLIC_PORT%
    filter_chains:
      - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_http
              upgrade_configs:
                - upgrade_type: websocket
              route_config:
                name: local_route
                virtual_hosts:
                  - name: local_serviced
                    domains:
                      - "*"
                    typed_per_filter_config:
                      envoy.filters.http.cors:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,x-request-token
                        max_age: "1728000"
                        expose_headers: grpc-status,grpc-message
                    routes:
                      # gRPC routes
                      - match:
                          safe_regex:
                            regex: "\/service.*"
                        route:
                          cluster: %SERVICE_GRPC%

                      # Websocket route
                      - match:
                          prefix: "/ws"
                        route:
                          cluster: %SERVICE_WEBSOCKET%

                      # Web routes
                      # TODO: better way to do this in Envoy?
                      - match:
                          path: "/"
                        route:
                          cluster: %SERVICE_UI%

                      - match:
                          prefix: "/user/"
                        route:
                          cluster: %SERVICE_UI%

                      - match:
                          prefix: "/play/"
                        route:
                          cluster: %SERVICE_UI%

                      - match:
                          prefix: "/assets/"
                        route:
                          cluster: %SERVICE_UI%

              http_filters:
                - name: envoy.grpc_web
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                - name: envoy.filters.http.cors
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
            common_tls_context:
              tls_certificates:
                - certificate_chain:
                    filename: %TLS_CERT_PATH%
                  private_key:
                    filename: %TLS_KEY_PATH%
